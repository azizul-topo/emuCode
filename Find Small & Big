.MODEL SMALL
.STACK 100H

.DATA
    MSG1 DB "ENTER FIRST NUMBER: $"
    MSG2 DB "ENTER SECOND NUMBER: $"
    MSG3 DB "SMALLEST NUMBER IS: $" 
    MSG4 DB "BOTH ARE EQUAL $"
    
    NUM1 DB 0        ; Placeholder for the first number
    NUM2 DB 0        ; Placeholder for the second number

.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX

    ; Prompt for the first number
    LEA DX, MSG1
    MOV AH, 9
    INT 21H    
    

    ; Read the first number
    MOV AH, 1
    INT 21H
    SUB AL, 30H       ; Convert ASCII to integer
    MOV NUM1, AL

    
    ; Print newline
    MOV AH, 2
    MOV DL, 0DH  
    INT 21H
    MOV DL, 0AH
    INT 21H
    
    ; Prompt for the second number
    LEA DX, MSG2
    MOV AH, 9
    INT 21H     
    
    

    ; Read the second number
    MOV AH, 1
    INT 21H
    SUB AL, 30H       ; Convert ASCII to integer
    MOV NUM2, AL

    ; Compare NUM1 and NUM2
    MOV AL, NUM1
    CMP AL, NUM2
    JL DISPLAY_FIRST ; If NUM1 < NUM2, display NUM1
    JE EQUAL 
    
    
    ; Print newline
    MOV AH, 2
    MOV DL, 0DH  
    INT 21H
    MOV DL, 0AH
    INT 21H
    
    LEA DX, MSG3
    MOV AH, 9
    INT 21H
    
    MOV AL, NUM2
    ADD AL, 30H       ; Convert integer to ASCII
    MOV DL, AL
    MOV AH, 2
    INT 21H     
    
    JMP EXIT
          

DISPLAY_FIRST: 

    ; Print newline
    MOV AH, 2
    MOV DL, 0DH  
    INT 21H
    MOV DL, 0AH
    INT 21H
    
    LEA DX, MSG3
    MOV AH, 9
    INT 21H
    
    MOV AL, NUM1
    ADD AL, 30H       ; Convert integer to ASCII
    MOV DL, AL
    MOV AH, 2
    INT 21H           ; Display the smallest number 
    
    JMP EXIT 
    
    
EQUAL:  
       
     ; Print newline
    MOV AH, 2
    MOV DL, 0DH  
    INT 21H
    MOV DL, 0AH
    INT 21H  

    LEA DX, MSG4
    MOV AH, 9
    INT 21H

EXIT: 

    MOV AH, 4CH
    INT 21H

MAIN ENDP
END MAIN
